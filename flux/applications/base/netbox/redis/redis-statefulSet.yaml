---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: netbox
  name: redis
  namespace: netbox
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: netbox
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: netbox
    spec:
      containers:
        - name: redis
          args:
            - sh
            - -c
            - redis-server --appendonly yes --requirepass $REDIS_PASSWORD
          ports:
            - name: redis
              containerPort: 6379
          envFrom:
            - secretRef:
                name: redis-env
          image: redis:8.2-alpine
          volumeMounts:
            - mountPath: /data
              name: redis-data
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              memory: 128Mi
          securityContext:
            runAsUser: 999
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      restartPolicy: Always
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        namespace: netbox
        creationTimestamp:
      spec:
        storageClassName: standard
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"
      status: {}
  updateStrategy: {}
status:
  availableReplicas: 0
  replicas: 0
