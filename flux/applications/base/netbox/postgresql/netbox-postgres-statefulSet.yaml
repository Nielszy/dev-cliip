---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: netbox-postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: netbox
  name: netbox-postgres
  namespace: netbox
spec:
  serviceName: netbox-postgres
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: netbox-postgres
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: netbox
  template:
    metadata:
      labels:
        app.kubernetes.io/name: netbox-postgres
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: netbox
      namespace: netbox
    spec:
      containers:
        - name: postgres
          image: postgres:18-alpine
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            # readOnlyRootFilesystem: true
            runAsNonRoot: true
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: netbox-postgres-env
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: netbox-postgres-data
            - mountPath: /var/run/postgresql
              name: emptydir-postgresql
            - mountPath: /tmp
              name: emptydir-postgresql
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "netbox" -d "dbname=netbox" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              memory: 256Mi
      restartPolicy: Always
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      volumes:
        - name: emptydir-postgresql
          emptyDir:
            sizeLimit: 50Mi
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: netbox-postgres-data
        namespace: netbox
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: standard
        resources:
          requests:
            storage: 5Gi
